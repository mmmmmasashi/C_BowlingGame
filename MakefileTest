# Makefile for a C++ project with unittest

# Compiler settings
CXX = g++
CXXFLAGS = -Wall
CXXFLAGS += -I"$(CPPUTEST_HOME)/include"
CXXFLAGS += -I"src"
CXXFLAGS += -include "$(CPPUTEST_HOME)/include/CppUTest/MemoryLeakDetectorNewMacros.h"
CFLAGS += -include "$(CPPUTEST_HOME)/include/CppUTest/MemoryLeakDetectorMallocMacros.h"

LDFLAGS = -L"$(CPPUTEST_HOME)/lib"
LDLIBS = -lCppUTest -lCppUTestExt

# Target executable name
TARGET = unittest.exe

SRCS_TARGET = bowling.c
SRCS_TEST = unittest.cpp

#Path list
SRCPATH_TARGET = $(patsubst %,src/%,$(SRCS_TARGET))
SRCPATH_TEST = $(patsubst %,test/%,$(SRCS_TEST))

# Object files
OBJS += $(patsubst %.c,%.o,$(SRCPATH_TARGET))
OBJS += $(patsubst %.cpp,%.o,$(SRCPATH_TEST))

# Build target
all: $(TARGET)

# Rule to link the program
$(TARGET): $(OBJS) | test
	$(CXX) -pthread $(LDFLAGS) $(OBJS) -o $(TARGET) $(LDLIBS)

test/obj/unittest.o: test/unittest.cpp src/bowling.h src/bowling.c | test
	$(CXX) $(CXXFLAGS) -c test/unittest.cpp -o test/obj/unittest.o

test/obj/bowling.o: src/bowling.c src/bowling.h | test
	$(CXX) $(CXXFLAGS) -c src/bowling.c -o test/obj/bowling.o

test:
	mkdir test

# Clean target
clean:
	rm -rf test/obj/*.o
	rm  $(TARGET)
